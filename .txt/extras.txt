import React, { useState } from "react";
import CustomButton from "../components/CustomButton";
import CustomInput from "../components/CustomInput";
import moment from "moment"; // Import moment library
import axios from "axios";
import logo from "../assets/images/logo.png";
import { Link } from "react-router-dom";
import { Input, Button } from "@material-ui/core";

function Signup() {
  const [userData, setUserData] = useState({
    name: "",
    email: "",
    password: "",
    userType: "",
    storeName: "",
    description: "",
    category: "",
    birthdate: "",
    image: "",
  });
  
  const [selectedImage, setSelectedImage] = useState(null);

  const [alert, setAlert] = useState("");

  const handleChange = (e) => {
    setUserData({
      ...userData,
      [e.target.name]: e.target.value,
    });
  };

  const handleImageChange = (e) => {
    setUserData({
      ...userData,
      image: e.target.files[0]
    });
    if (e.target.files[0]) {
      setSelectedImage(URL.createObjectURL(e.target.files[0]));
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      // Get all users
      const usersResponse = await axios.get(
        "http://localhost:8080/api/getAllUsers"
      );
      const users = usersResponse.data;

      // Check if email already exists
      const existingUser = users.find(
        (user) => user.email === userData.email
      );
      if (existingUser) {
        // Alert the user that the email already exists
        setAlert("Email already exists. Please use a different email.");
      } else {
        // Create user
        const userResponse = await axios.post(
          "http://localhost:8080/api/createUserWOutImage",
          {
            name: userData.name,
            email: userData.email,
            password: userData.password,
            birthDate: moment(userData.birthdate).format("YYYY-MM-DD")
          }
        );
        const user = userResponse.data;

        // Create account
        const accountData = {
          isVendor: userData.userType === "vendor",
          isAdmin: false,
          userId: user.userId,
        };
        await axios.post(
          "http://localhost:8080/api/createAccount",
          accountData
        );

        // If user is a vendor, create store
        if (userData.userType === "vendor") {
          const storeData = {
            storeName: userData.storeName,
            description: userData.description,
            category: userData.category,
            vendorAccountId: user.userId,
          };
          await axios.post("http://localhost:8080/api/createStore", storeData);
        }

        // Update user image
        const formData = new FormData();
        formData.append("image", userData.image);
        await axios.put(
          `http://localhost:8080/api/updateUserImage/${user.userId}`,
          formData
        );

        // Alert the user that the user creation is successful
        setAlert("User created successfully.");
      }
    } catch (error) {
      console.error(error);
      // Alert the user that the user creation is not successful
      setAlert("User creation failed. Please try again.");
    }
  };

  return (
    <div className="w-full bg-stroke-bg bg-center bg-no-repeat bg-cover font-custom">
  <div className="w-[500px] m-auto">
    <div className="w-full flex items-center justify-center">
      <img src={logo} alt="Palit logo" className="w-[250px] h-[102px] mt-5" />
    </div>

    <form onSubmit={handleSubmit}>
      
    <div className="w-full flex items-center justify-center flex-col mt-8">
      <Input
        type="file"
        accept="image/*"
        onChange={handleImageChange}
        style={{ display: "none" }}
        id="image-upload-input"
      />
      <label htmlFor="image-upload-input">
        {selectedImage ? (
          <img
            src={selectedImage}
            alt="Selected"
            style={{
              width: "90px",
              height: "90px",
              borderRadius: "20px",
            }}
          />
        ) : (
          <Button
            variant="contained"
            color="primary"
            component="span"
            style={{
              width: "90px",
              height: "90px",
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
              borderRadius: "20px",
              backgroundColor: "#0071B3",
              fontSize: "45px",
              fontWeight: "bold",
            }}
          >
            +
          </Button>
        )}
      </label>
    </div>
      <div className="mt-4">
        <label>Full name</label>
        <CustomInput
          type="text"
          placeholder="Name"
          name="name"
          onChange={handleChange}
        />
      </div>
      <div className="mt-4">
        <label>Email address</label>
        <CustomInput
          type="email"
          placeholder="Email"
          name="email"
          onChange={handleChange}
        />
      </div>
      <div className="mt-4">
        <label>Create password</label>
        <CustomInput
          type="password"
          placeholder="Password"
          name="password"
          onChange={handleChange}
        />
      </div>
      <div className="mt-4">
        <label>Birth date</label>
        <CustomInput
          type="date"
          name="birthDate"
          onChange={handleChange}
        />
      </div>
      <div className="mt-4">
        <label>Choose how you want to use Palit</label>
        <select
          name="userType"
          onChange={handleChange}
          className="w-full rounded-[20px] p-3 mt-1 text-grayy font-custom border border-grayy"
        >
          <option value="">Select user type</option>
          <option value="customer">Customer</option>
          <option value="vendor">Vendor</option>
        </select>
      </div>
      {userData.userType === "vendor" && (
        <>
          <div className="mt-4">
            <label>Store Name</label>
            <CustomInput
              type="text"
              placeholder="Store Name"
              name="storeName"
              onChange={handleChange}
            />
          </div>
          <div className="mt-4">
            <label>Description</label>
            <CustomInput
              type="text"
              placeholder="Description"
              name="description"
              onChange={handleChange}
            />
          </div>
          <div className="mt-4">
            <label>Category</label>
            <CustomInput
              type="text"
              placeholder="Category"
              name="category"
              onChange={handleChange}
            />
          </div>
        </>
      )}
      {alert}
      <CustomButton
        btnStyle="w-full bg-primary p-3 text-white rounded-[20px] mt-10"
        label="Sign Up"
        onClick={handleSubmit}
        type="submit"
      />
    </form>

    <Link to="signin">
      <div className="text-center mt-4 pb-6">
        Already a user?
        <span className="text-primary underline cursor-pointer"> Login</span>
      </div>
    </Link>
  </div>
</div>

  );
}

export default Signup;